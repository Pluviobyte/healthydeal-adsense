---
import BaseLayout from './BaseLayout.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import TableOfContents from '../components/TableOfContents.astro';
import AdSlot from '../components/AdSlot.astro';
import NewsletterForm from '../components/NewsletterForm.astro';
import RelatedPosts from '../components/RelatedPosts.astro';
import type { CollectionEntry } from 'astro:content';
import type { MarkdownHeading } from 'astro';
import { buildPostMeta } from '../utils/seo';
import { buildStructuredData, buildBreadcrumbSchema } from '../utils/schema';
import type { Section } from '../utils/content';
import {
  formatDisplayDate,
  getSectionTitle,
  loadRelatedPosts
} from '../utils/content';

type ContentEntry = CollectionEntry<
  'healthy-eating' | 'clean-eating' | 'meal-prep' | 'healthy-recipes' | 'resources'
>;

interface PostLayoutProps {
  post: ContentEntry;
  relatedPosts?: ContentEntry[];
}

const { post, relatedPosts = [] } = Astro.props as PostLayoutProps;
const frontmatter = post.data;
const slug = post.slug;
const url = Astro.site
  ? new URL(`/${post.collection}/${slug}/`, Astro.site).toString()
  : `https://www.gencoser.com/${post.collection}/${slug}/`;

const section = (frontmatter.section ?? post.collection) as Section;
const sectionTitle = getSectionTitle(section);

// Render content to get headings
const { Content, headings } = await post.render();

const seo = buildPostMeta(post, Astro.site?.toString() ?? 'https://www.gencoser.com');

const structuredData = (() => {
  const base = buildStructuredData({ frontmatter, url });
  let origin = '';
  try { origin = new URL(url).origin; } catch {}
  const crumbs = buildBreadcrumbSchema([
    { name: 'Home', url: origin || '/' },
    { name: sectionTitle, url: origin ? new URL(`/${post.collection}/`, origin).toString() : `/${post.collection}/` },
    { name: frontmatter.title, url }
  ]);
  return [...base, crumbs];
})();

const faqItems = frontmatter.faq ?? [];
const ads = frontmatter.ads ?? { top: false, mid: false, bottom: false };
---
<BaseLayout
  title={seo.title}
  description={seo.description}
  canonical={seo.canonical}
  meta={seo.meta}
  structuredData={structuredData}
  bodyClass="post-page"
>
  <section class="bg-gradient-to-b from-white via-white to-slate-50">
    <div class="mx-auto w-full max-w-6xl px-4 py-10 md:py-12">
      <Breadcrumbs
        items={[
          { href: '/', label: 'Home' },
          { href: `/${post.collection}/`, label: sectionTitle },
          { href: `/${post.collection}/${slug}/`, label: frontmatter.title }
        ]}
      />

      <article class="mt-6 grid gap-10 lg:grid-cols-[minmax(0,3fr)_minmax(0,1fr)] lg:items-start">
        <div class="space-y-8">
          <header class="space-y-4">
            <span class="inline-flex rounded-full bg-primary/10 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-primary">
              {sectionTitle}
            </span>
            <h1 class="text-3xl font-bold leading-tight text-slate-900 md:text-4xl">
              {frontmatter.title}
            </h1>
            <p class="text-lg text-slate-600">{frontmatter.description}</p>
            <div class="flex flex-wrap items-center gap-4 text-sm text-slate-500">
              <span>By {frontmatter.author ?? 'Editorial Team'}</span>
              <span>Published {formatDisplayDate(frontmatter.date)}</span>
              {frontmatter.updated && (
                <span>Updated {formatDisplayDate(frontmatter.updated)}</span>
              )}
              {frontmatter.readingTime && <span>{frontmatter.readingTime} min read</span>}
            </div>
          </header>

          <AdSlot position="top" enabled={Boolean(ads.top)} />

          {frontmatter.coverImage && (
            <figure class="overflow-hidden rounded-2xl border border-slate-200">
              <img
                src={frontmatter.coverImage}
                alt={frontmatter.title}
                class="h-auto w-full object-cover"
                loading="lazy"
              />
            </figure>
          )}

          <div class="prose prose-slate max-w-none prose-headings:scroll-mt-24 prose-img:rounded-xl">
            <Content />
          </div>

          {frontmatter.tags && frontmatter.tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {frontmatter.tags.map((tag) => (
                <span class="rounded-full bg-primary/10 px-3 py-1 text-xs font-semibold text-primary">
                  {tag}
                </span>
              ))}
            </div>
          )}

          {faqItems.length > 0 && (
            <section class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
              <h2 class="text-xl font-semibold text-slate-900">Frequently Asked Questions</h2>
              <div class="mt-4 space-y-4">
                {faqItems.map((item) => (
                  <details class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3">
                    <summary class="cursor-pointer text-sm font-semibold text-slate-800">
                      {item.q}
                    </summary>
                    <p class="mt-2 text-sm text-slate-600">{item.a}</p>
                  </details>
                ))}
              </div>
            </section>
          )}

          <AdSlot position="bottom" enabled={Boolean(ads.bottom)} />

          <RelatedPosts posts={relatedPosts} currentSlug={slug} />
        </div>

        <aside class="space-y-6 lg:sticky lg:top-28">
          {frontmatter.toc !== false && (
            <TableOfContents headings={headings} />
          )}
          <AdSlot position="mid" enabled={Boolean(ads.mid)} />
          <NewsletterForm />
        </aside>
      </article>
    </div>
  </section>
</BaseLayout>
